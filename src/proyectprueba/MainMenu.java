/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectprueba;

import database.CryptoException;
import database.CryptoUtils;
import database.DataBaseBackUp;
import database.WorkWithDatabase;
import java.io.File;
import java.io.IOException;
import java.security.NoSuchAlgorithmException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.crypto.IllegalBlockSizeException;
import javax.swing.JFileChooser;

/**
 *
 * @author LFOM
 */
public class MainMenu extends javax.swing.JFrame {

    //object dataBase for work
    WorkWithDatabase mainMenu = new WorkWithDatabase();
    
    //Files for encrypt and decrypt (CryptoUtils.java)
    File inputFile = new File("C:/Users/"+System.getProperty("user.name")+"/pagos.db");
    File encryptedFile = new File("C:/Users/"+System.getProperty("user.name")+"/pagos.db");
    File decryptedFile = new File("C:/Users/"+System.getProperty("user.name")+"/pagos.db");
    //
    
    /**
     * Creates new form MainMenu
     * ALL code here start with the program
     */
    public MainMenu() throws SQLException, ClassNotFoundException {
        
        //initial components
        initComponents();
        
        //Decrypt database pagos.db
        try {
            CryptoUtils.decrypt( encryptedFile, decryptedFile);
        } catch (CryptoException ex) {
            Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NoSuchAlgorithmException ex) {
            Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalBlockSizeException ex) {
            Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
        } //end decrypt
        
        //Start a Thread for encrypt database when program close
        Runtime.getRuntime().addShutdownHook(new Thread(new Runnable() {
            public void run() {
                try {
                    //encrypt pagos.db when program is close
                    CryptoUtils.encrypt( inputFile, encryptedFile);
                } catch (CryptoException ex) {
                    Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
                } catch (NoSuchAlgorithmException ex) {
                    Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IllegalBlockSizeException ex) {
                    Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
                }
            } //end run
        }, "Shutdown-thread")); //End run time and close thread
        
        //Check if database exists
        mainMenu.start();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        addNewClient = new javax.swing.JButton();
        seeClient = new javax.swing.JButton();
        dataBaseBackup = new javax.swing.JButton();
        exitTextMain = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Other/final main.png"))); // NOI18N

        addNewClient.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Other/addClient.png"))); // NOI18N
        addNewClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewClientActionPerformed(evt);
            }
        });

        seeClient.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Other/SeeClient.png"))); // NOI18N
        seeClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seeClientActionPerformed(evt);
            }
        });

        dataBaseBackup.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Other/DBbackup.png"))); // NOI18N
        dataBaseBackup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dataBaseBackupActionPerformed(evt);
            }
        });

        exitTextMain.setForeground(new java.awt.Color(51, 51, 51));

        jLabel1.setText("Aplicacion creada por manrique");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Other/restore DB.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(188, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(183, 183, 183))
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(exitTextMain)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(addNewClient, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(seeClient, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dataBaseBackup, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(33, 33, 33))
            .addGroup(layout.createSequentialGroup()
                .addGap(182, 182, 182)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addNewClient)
                    .addComponent(seeClient))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                        .addComponent(dataBaseBackup, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(exitTextMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jLabel1))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addNewClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewClientActionPerformed
        
        //go to add new client interface
        Clientes cambiarVista = null;
        try {
            cambiarVista = new Clientes ();
        } catch (SQLException ex) {
            Logger.getLogger(Clientes.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Clientes.class.getName()).log(Level.SEVERE, null, ex);
        }
        cambiarVista.setVisible(true);
        dispose();
                
    }//GEN-LAST:event_addNewClientActionPerformed

    private void seeClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seeClientActionPerformed
        
        //Go to seeClient class
        BusquedaClientes cambiarVista = null;
        try {
            cambiarVista = new BusquedaClientes ();
        } catch (SQLException ex) {
            Logger.getLogger(Clientes.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Clientes.class.getName()).log(Level.SEVERE, null, ex);
        }
        cambiarVista.setVisible(true);
        dispose();
        
    }//GEN-LAST:event_seeClientActionPerformed

    private void dataBaseBackupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dataBaseBackupActionPerformed
        //exitTextMain.setText("copia de seguridad creada con exito en escritorio");
        try {
            DataBaseBackUp backup = new DataBaseBackUp();
            backup.run();
            exitTextMain.setText("copia de seguridad creada con exito en escritorio");
        } catch (Exception ex) {
            Logger.getLogger(DataBaseBackUp.class.getName()).log(Level.SEVERE, null, ex);
            exitTextMain.setText("No se pudo crear el backup, contacte con el administrador");
        }        
        
    }//GEN-LAST:event_dataBaseBackupActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //restore database choosing a database backup
        JFileChooser fileChooser = new JFileChooser();
        //initial directory for want a backup
        fileChooser.setCurrentDirectory(new File(System.getProperty("C:/Users/"+System.getProperty("user.name")+"/Desktop")));
        //int result = fileChooser.showOpenDialog(parent);
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    new MainMenu().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addNewClient;
    private javax.swing.JButton dataBaseBackup;
    private javax.swing.JTextField exitTextMain;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton seeClient;
    // End of variables declaration//GEN-END:variables
}
